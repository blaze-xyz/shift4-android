buildscript {
    ext.kotlin_version = "1.8.0"
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/r8-releases/raw'
        }
    }
    dependencies {
        classpath 'com.android.tools:r8:3.3.75'
        classpath "com.android.tools.build:gradle:7.4.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'com.android.library' version '7.4.0' apply false
    id 'com.android.application' version '7.4.0' apply false
}

def versionPropsFile = file('version.properties')
if (versionPropsFile.canRead()) {
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    version = versionProps['VERSION_NAME']
} else {
    throw new GradleException("Could not read version.properties!")
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete 'ipworks_debug/build'
    delete 'ipworks/build'
}

task printVersion {
    doLast {
        println rootProject.version
    }
}

task incrementVersionName {
    doLast {
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['VERSION_NAME']

            def major = code.split("\\.")[0]
            def minor = code.split("\\.")[1]
            def patch = code.split("\\.")[2].toInteger() + 1

            versionProps['VERSION_NAME'] = major.toString() + "." + minor.toString() + "." + patch.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }
}